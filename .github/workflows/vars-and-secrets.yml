name: Variables and Secrets Demo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  APP_MODE: ${{ vars.APP_MODE }}
  SUPPORT_EMAIL: ${{ vars.SUPPORT_EMAIL }}
  API_VERSION: ${{ vars.API_VERSION }}

jobs:
  configure-environment:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Mostrando vars
        run: |
          echo "=== Configuração ENV ==="
          echo "Application Mode: ${{ vars.APP_MODE }}"
          echo "Support Email: ${{ vars.SUPPORT_EMAIL }}"
          echo "API Version: ${{ vars.API_VERSION }}"
          echo ""
          echo "=== Environment Variables ==="
          echo "APP_MODE (from env): $APP_MODE"
          echo "SUPPORT_EMAIL (from env): $SUPPORT_EMAIL"
          echo "API_VERSION (from env): $API_VERSION"

      - name: Teste de uso
        run: |
          echo "=== Application Configuration ==="
          cat > app-config.json << EOF
          {
            "mode": "${{ vars.APP_MODE }}",
            "support_email": "${{ vars.SUPPORT_EMAIL }}",
            "api_version": "${{ vars.API_VERSION }}",
            "debug": ${{ vars.APP_MODE == 'development' && 'true' || 'false' }},
            "log_level": "${{ vars.APP_MODE == 'production' && 'ERROR' || 'DEBUG' }}"
          }
          EOF
          
          echo "Generated app-config.json:"
          cat app-config.json

          if [ "${{ vars.APP_MODE }}" = "production" ]; then
            echo "Configurado para PROD!"
          elif [ "${{ vars.APP_MODE }}" = "development" ]; then
            echo "Configurado para DEV!"
          else
            echo "Ops! O valor da variável: ${{ vars.APP_MODE }}"
          fi

  secure-operations:
    runs-on: self-hosted
    needs: configure-environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticação
        env:
          TOKEN: ${{ secrets.TOKEN }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          echo "=== Autenticação Segura ==="
          if [ -n "$TOKEN" ]; then
            echo "TOKEN Disponível!"
            echo "Token length: ${#TOKEN} characters"
            echo "Token prefix: ${TOKEN:0:8}..."
          else
            echo "TOKEN não está definido..."
            exit 1
          fi
          
          if [ -n "$PASSWORD" ]; then
            echo "PASSWORD Disponível!"
            echo "PASSWORD length: ${#PASSWORD} characters"
            echo "PASSWORD prefix: ${PASSWORD:0:6}..."
          else
            echo "PASSWORD não está definido..."
            exit 1
          fi
          
          echo "Simulando requisição com o Token"
          echo "curl -H 'Authorization: Bearer $TOKEN' -H 'X-Password: $PASSWORD' https://api.devcalc.com/auth/validate"
          echo "Authentication successful"